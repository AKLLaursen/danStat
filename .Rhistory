library magrittr
library(magrittr)
library(httr)
install.packages(httr)
install.packages("httr")
install.packages("curl")
install.packages("httr")
library(httr)
path <- "http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=Default&timeOrder=Ascending&VAREGR=*&ENHED=*&Tid=*"
statDate <- path %>%
GET()
path <- "http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=Default&timeOrder=Ascending&VAREGR=*&ENHED=*&Tid=*"
statData <- path %>%
GET() %>%
content() %>%
fromJSON()
library(magrittr)
library(httr)
library(dplyr)
library(jsonlite)
path <- "http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=Default&timeOrder=Ascending&VAREGR=*&ENHED=*&Tid=*"
statData <- path %>%
GET() %>%
content() %>%
fromJSON()
statData
statData %>% str
install.packages("rjstat")
library(rjstat)
statData <- path %>%
GET() %>%
content() %>%
fromJSONstat()
statData %>% str
statData$`Consumer price index by commodity group, unit and time`$`commodity group` %>% View
statData[1]
statData <- path %>%
GET() %>%
content() %>%
fromJSONstat() %>%
extract(1)
?fromJSONstat
"2000M01" %>% as.Date()
"2000-01" %>% as.Date
?as.Date
"2000-01" %>% as.Date(format = "%Y-%m")
"2000-01-01" %>% as.Date(format = "%Y-%m-%d")
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month"
)
)
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month")
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m")
"2002-01" %>% as.Date()
"2002-01" %>% as.Date(format = "%Y-%m")
"2002-01" %>% as.Date(format = "%Y-%M")
"2002-01" %>% as.Date(format = "%Y-%m")
"2002" %>% as.Date(format = "%Y")
?gsub
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m")
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m") %>% gsub("-", "M", .)
?paste
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m") %>% gsub("-", "M", .) %>% paste(sep = ", ")
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m") %>% gsub("-", "M", .) %>% as.character %>% paste(sep = ", ")
seq("2000-01-01" %>% as.Date(format = "%Y-%m-%d"), "2002-01-01" %>% as.Date(format = "%Y-%m-%d"), by = "1 month") %>% format("%Y-%m") %>% gsub("-", "M", .) %>% paste(collapse = ", ")
?fromJSONstat
?maggritr
library(danStat)
test <- importData("2012-01-01", "2014-01-01")
installed.packages("XML")
install.packages("XML")
install.packages("XML")
test <- importData("2012-01-01", "2014-01-01")
library(magrittr)
monthFrom <- "2012-01-01"
debug(importData)
test <- importData("2012-01-01", "2014-01-01")
debug(importData)
test <- importData("2012-01-01", "2014-01-01")
path
library(danStat)
test <- importData("2012-01-01", "2014-01-01")
debug(importData)
test <- importData("2012-01-01", "2014-01-01")
path
path %>% httr:GET
path %>% httr::GET
httr::GET(path)
httr::content(httr::GET(path))
library(danStat)
test <- importData("2012-01-01", "2014-01-01")
debug(importData)
test <- importData("2012-01-01", "2014-01-01")
path
httr::GET(path)
httr::GET("http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=Default&timeOrder=Ascending&VAREGR=*&ENHED=*&Tid=2012M01%2C2012M02)
)
2
)
)
""
"
httr::GET("http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=Default&timeOrder=Ascending&VAREGR=*&ENHED=*&Tid=2012M01%2C2012M02")
httr::GET("hhttp://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=CodeAndValue&timeOrder=Ascending&VAREGR=*&ENHED=*&TID=2011M03%2C2011M04%2C2011M05")
httr::GET("http://api.statbank.dk/v1/data/PRIS6/JSONSTAT?lang=en&valuePresentation=CodeAndValue&timeOrder=Ascending&VAREGR=*&ENHED=*&TID=2011M03%2C2011M04%2C2011M05")
library(danStat)
test <- importData("2012-01-01", "2014-01-01")
library(danStat)
test <- importData("2012-01-01", "2014-01-01")
test
library(danStat)
debug(importData)
test <- importData("2011-03-01", "2011-05-01")
monthSeries
path
test
test[[1]]
library(magrittr)
test[[1]] %>% str
test[[1]] %>% str %>% View
test[[1]] %>% View
library(danStat)
test <- importData("2011-03-01", "2011-05-01")
test %>% str
?grpl
?grepl
test %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexec("[^ ]* (.*)", .))
library(danStat)
test <- importData("2011-03-01", "2011-05-01")
head(test)
head(test)
library(danStat)
test <- importData("2011-03-01", "2011-05-01")
head(test)
library(danStat)
test <- importData("2011-03-01", "2011-05-01")
head(test)
test %>% mutate(commodityGroup = `commodity group` %>% regexec("[^ ]* (.*)", .)) %>% head
library(magrittr)
library(dplyr)
test %>% mutate(commodityGroup = `commodity group` %>% regexec("[^ ]* (.*)", .)) %>% head
test %>% mutate(commodityGroup = `commodity group` %>% regexec("[^ ]* (.*)", .)) %>% tail
test %>% mutate(commodityGroup = `commodity group` %>% regexec("[^ ]* (.*)", .))
test %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexec("^(\S+)\s(.+)$", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexec("^(\\S+)\\s(.+)$", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gregexpr("[^ ]* (.*)", .))
test %>% mutate(commodityGroup = `commodity group` %>% gregexpr("[^ ]* (.*)", .)) %>% View
test %>% mutate(commodityGroup = `commodity group`) %>% View
test %>% str
names(test)
test %>% mutate(commodityGroup = `commodity group` %>% gregexpr("[^ ]* (.*)", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexec("^(\\S+)\\s(.+)$", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexpr("[^ ]* (.*)", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% regexpr("^(\\S+)\\s(.+)$", .)) %>% View
gsub(' [A-z ]*', '' , 'my string is sad')
gsub('[A-z ]* ', '' , 'my string is sad')
gsub('*[A-z ] ', '' , 'my string is sad')
gsub('[A-z ] ', '' , 'my string is sad')
gsub('[A-z *] ', '' , 'my string is sad')
gsub('[A-z]* ', '' , 'my string is sad')
gsub('[A-z] *', '' , 'my string is sad')
gsub('[A-z]', '' , 'my string is sad')
gsub('[A-z] ', '' , 'my string is sad')
gsub('[A-z]* ', '' , 'my string is sad')
gsub('[A-z] *', '' , 'my string is sad')
gsub('*[A-z]', '' , 'my string is sad')
gsub('* [A-z]', '' , 'my string is sad')
gsub('[A-z]*', '' , 'my string is sad')
gsub(' [A-z]*', '' , 'my string is sad')
gsub('[A-z]* ', '' , 'my string is sad')
gsub(' [A-z]* ', '' , 'my string is sad')
gsub(' [A-z]*', '' , 'my string is sad')
test %>% mutate(commodityGroup = `commodity group` %>% gsub("([^\s]+)", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("([^\\s]+)", "", .)) %>% View
"([^\\s]+)"
test %>% mutate(commodityGroup = `commodity group` %>% gsub("/^[^\s]+/", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("/^[^\\s]+/", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub(" [A-z].*", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("[A-z] .*", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("[A-z].* ", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub(" *[A-z]", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub(" *.[A-z]", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("^([^\\s]+)\\s", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("([^\\s]+)", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("([\\s]+)", "", .)) %>% View
test %>% mutate(commodityGroup = `commodity group` %>% gsub("^\\S*", "", .)) %>% View
head(test)
test %>% mutate(time = time %>% paste0("-01"))
head(test)
library(danStat)
test %>% mutate(time = time %>% paste0("-01"))
test <- importData("2011-03-01", "2011-05-01")
head(test)
library(danStat)
install.packages("rmarkdown")
library(danStat)
test <- importData("2010-01-01", "2010-03-01")
head(test)
?GET
?get
?GET
library(danStat)
danStatGET("subjects")
debug(danStatGET)
danStatGET("subjects")
path
httr::GET(path)
httr::content(httr::GET(path))
jsonlite::fromJSON(httr::content(httr::GET(path)))
undebug(danStatGET)
library(danStat)
danStatGET("subjects")
library(danStat)
danStatGET("subjects")
?content
library(danStat)
danStatGET("subjects")
debug(danStatGET)
danStatGET("subjects")
path
library(danStat)
danStatGET("subjects")
danStatGET("subjects") %$% description
install.packages("shiny")
install.packages("shinydashboard")
install.packages("import")
library(shiny)
library(shinydashboard)
shiny::runApp('inst/app')
?selectInput
shiny::runApp('inst/app')
library(danStat)
shiny::runApp('inst/app')
shiny::runApp('inst/app')
shiny::runApp('inst/app')
shiny::runApp('inst/app')
?reactive
?uiOutput
importSubjects()
test <- importSubjects
test <- importSubjects()
test
?is.null
is.null(NULL)
!is.null(NULL)
library(danStat)
importSubjects()
test <- importSubjects()
test
test <- importTables("02")
test
library(danStat)
importSubjects
importSubjects()
test <- importSubjects()
test
library(danStat)
test <- importSubjects()
test
importTables("02")
test <- importTables("02")
head(test)
View(test)
danStatGET("subjects")
danStatGET("subjects") %>% fromJSON()
danStatGET("subjects") %>% jsonlite::fromJSON()
test <- importSubjects()
test
library(danStat)
